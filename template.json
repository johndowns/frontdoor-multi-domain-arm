{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "frontDoorName": {
            "type": "string"
        },
        "app1BackendUrl": {
            "type": "string"
        },
        "app2BackendUrl": {
            "type": "string"
        },
        "customers": {
            "type": "array"
        }
    },
    "variables": {
        "frontDoorBackendPoolApp1Name": "backend-pool-app-1",
        "frontDoorBackendPoolApp2Name": "backend-pool-app-2",

        // Assemble an object representing the default frontend for the Front Door instance.
        "frontDoorFrontendDefaultName": "frontend-default",
        "frontDoorFrontendDefault": {
            "name": "[variables('frontDoorFrontendDefaultName')]",
            "properties": {
                "hostName": "[concat(parameters('frontDoorName'), '.azurefd.net')]",
                "sessionAffinityEnabledState": "Disabled",
                "sessionAffinityTtlSeconds": 0
            }
        },

        "copy": [
            // Assemble an array of frontends for each customer's hostnames.
            {
                "name": "frontDoorFrontendNamesApp1",
                "count": "[length(parameters('customers'))]",
                "input": "[frontdoorarm.createApp1ResourceName(parameters('customers')[copyIndex('frontDoorFrontendNamesApp1')].customerId)]"
            },
            {
                "name": "frontDoorFrontendsApp1",
                "count": "[length(parameters('customers'))]",
                "input": {
                    "name": "[frontdoorarm.createApp1ResourceName(parameters('customers')[copyIndex('frontDoorFrontendsApp1')].customerId)]",
                    "properties": {
                        "hostName": "[parameters('customers')[copyIndex('frontDoorFrontendsApp1')].app1HostName]",
                        "sessionAffinityEnabledState": "Disabled",
                        "sessionAffinityTtlSeconds": 0
                    }
                }
            },
            {
                "name": "frontDoorFrontendNamesApp2",
                "count": "[length(parameters('customers'))]",
                "input": "[frontdoorarm.createApp2ResourceName(parameters('customers')[copyIndex('frontDoorFrontendNamesApp2')].customerId)]"
            },
            {
                "name": "frontDoorFrontendsApp2",
                "count": "[length(parameters('customers'))]",
                "input": {
                    "name": "[frontdoorarm.createApp2ResourceName(parameters('customers')[copyIndex('frontDoorFrontendsApp2')].customerId)]",
                    "properties": {
                        "hostName": "[parameters('customers')[copyIndex('frontDoorFrontendsApp2')].app2HostName]",
                        "sessionAffinityEnabledState": "Disabled",
                        "sessionAffinityTtlSeconds": 0
                    }
                }
            },

            // Assemble an array of frontend IDs to use in the routing rules.
            {
                "name": "frontDoorRoutingRulesApp1Frontends",
                "count": "[length(parameters('customers'))]",
                "input": {
                    "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('frontDoorName'), frontdoorarm.createApp1ResourceName(parameters('customers')[copyIndex('frontDoorRoutingRulesApp1Frontends')].customerId))]"
                }
            },
            {
                "name": "frontDoorRoutingRulesApp2Frontends",
                "count": "[length(parameters('customers'))]",
                "input": {
                    "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('frontDoorName'), frontdoorarm.createApp2ResourceName(parameters('customers')[copyIndex('frontDoorRoutingRulesApp2Frontends')].customerId))]"
                }
            }
        ],

        // Assemble an array of all application frontends, which will be used for the custom HTTPS configuration.
        "frontDoorFrontendAppNames": "[concat(variables('frontDoorFrontendNamesApp1'), variables('frontDoorFrontendNamesApp2'))]",

        // Assemble an array of all Front Door frontends.
        "frontDoorFrontends": "[concat(array(variables('frontDoorFrontendDefault')), variables('frontDoorFrontendsApp1'), variables('frontDoorFrontendsApp2'))]"
    },
    "resources": [
        {
            "apiVersion": "2019-04-01",
            "type": "Microsoft.Network/frontDoors",
            "name": "[parameters('frontDoorName')]",
            "location": "global",
            "properties": {
                "healthProbeSettings": [
                    {
                        "name": "health-probe-app-1",
                        "properties": {
                            "path": "/",
                            "protocol": "Http",
                            "intervalInSeconds": 120
                        }
                    },
                    {
                        "name": "health-probe-app-2",
                        "properties": {
                            "path": "/",
                            "protocol": "Http",
                            "intervalInSeconds": 120
                        }
                    }
                ],
                "loadBalancingSettings": [
                    {
                        "name": "shared-load-balancing-settings",
                        "properties": {
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2
                        }
                    }
                ],
                "backendPools": [
                    {
                        "name": "[variables('frontDoorBackendPoolApp1Name')]",
                        "properties": {
                            "backends": [
                                {
                                    "address": "[parameters('app1BackendUrl')]",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "weight": 50,
                                    "priority": 1,
                                    "enabledState": "Enabled"
                                }
                            ],
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('frontDoorName'), 'shared-load-balancing-settings')]"
                            },
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('frontDoorName'), 'health-probe-app-1')]"
                            }
                        }
                    },
                    {
                        "name": "[variables('frontDoorBackendPoolApp2Name')]",
                        "properties": {
                            "backends": [
                                {
                                    "address": "[parameters('app2BackendUrl')]",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "weight": 50,
                                    "priority": 1,
                                    "enabledState": "Enabled"
                                }
                            ],
                            "loadBalancingSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('frontDoorName'), 'shared-load-balancing-settings')]"
                            },
                            "healthProbeSettings": {
                                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('frontDoorName'), 'health-probe-app-2')]"
                            }
                        }
                    }
                ],
                "frontendEndpoints": "[variables('frontDoorFrontends')]",
                "routingRules": [
                    {
                        "name": "routingrule-app1",
                        "properties": {
                            "frontendEndpoints": "[variables('frontDoorRoutingRulesApp1Frontends')]",
                            "acceptedProtocols": [
                                "Http",
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "MatchRequest",
                                "backendPool": {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('frontDoorName'), variables('frontDoorBackendPoolApp1Name'))]"
                                }
                            },
                            "enabledState": "Enabled"
                        }
                    },
                    {
                        "name": "routingrule-app2",
                        "properties": {
                            "frontendEndpoints": "[variables('frontDoorRoutingRulesApp2Frontends')]",
                            "acceptedProtocols": [
                                "Http",
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "routeConfiguration": {
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                                "forwardingProtocol": "MatchRequest",
                                "backendPool": {
                                    "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('frontDoorName'), variables('frontDoorBackendPoolApp2Name'))]"
                                }
                            },
                            "enabledState": "Enabled"
                        }
                    }
                ],
                "enabledState": "Enabled"
            }
        },
        {
            "apiVersion": "2020-07-01",
            "type": "Microsoft.Network/frontdoors/frontendEndpoints/customHttpsConfiguration",
            "name": "[concat(parameters('frontDoorName'), '/', variables('frontDoorFrontendAppNames')[copyIndex('customHttpsConfigurationCopy')] , '/default')]",
            "dependsOn": [
                "[parameters('frontDoorName')]"
            ],
            "properties": {
                "protocolType": "ServerNameIndication",
                "certificateSource": "FrontDoor",
                "frontDoorCertificateSourceParameters": {
                    "certificateType": "Dedicated"
                },
                "minimumTlsVersion":"1.2"
            },
            "copy": {
                "name": "customHttpsConfigurationCopy",
                "count": "[length(variables('frontDoorFrontendAppNames'))]"
            }
        }
    ],
    "functions": [
        {
            "namespace": "frontdoorarm",
            "members": {
                "createApp1ResourceName": {
                    "parameters": [
                        {
                            "name": "customerId",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat('frontend-app1-', parameters('customerId'))]"
                    }
                },
                "createApp2ResourceName": {
                    "parameters": [
                        {
                            "name": "customerId",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat('frontend-app2-', parameters('customerId'))]"
                    }
                }
            }
        }
    ]
}
