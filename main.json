{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.214.15117",
      "templateHash": "11743534044816209094"
    }
  },
  "parameters": {
    "frontDoorName": {
      "type": "string"
    },
    "app1BackendUrl": {
      "type": "string"
    },
    "app2BackendUrl": {
      "type": "string"
    },
    "customers": {
      "type": "array"
    }
  },
  "functions": [],
  "variables": {
    "copy": [
      {
        "name": "frontDoorFrontendNamesApp1",
        "count": "[length(parameters('customers'))]",
        "input": "[format('frontend-app1-{0}', parameters('customers')[copyIndex('frontDoorFrontendNamesApp1')].customerId)]"
      },
      {
        "name": "frontDoorFrontendsApp1",
        "count": "[length(parameters('customers'))]",
        "input": {
          "name": "[format('frontend-app1-{0}', parameters('customers')[copyIndex('frontDoorFrontendsApp1')].customerId)]",
          "properties": {
            "hostName": "[parameters('customers')[copyIndex('frontDoorFrontendsApp1')].app1HostName]",
            "sessionAffinityEnabledState": "Disabled",
            "sessionAffinityTtlSeconds": 0
          }
        }
      },
      {
        "name": "frontDoorFrontendNamesApp2",
        "count": "[length(parameters('customers'))]",
        "input": "[format('frontend-app2-{0}', parameters('customers')[copyIndex('frontDoorFrontendNamesApp2')].customerId)]"
      },
      {
        "name": "frontDoorFrontendsApp2",
        "count": "[length(parameters('customers'))]",
        "input": {
          "name": "[format('frontend-app2-{0}', parameters('customers')[copyIndex('frontDoorFrontendsApp2')].customerId)]",
          "properties": {
            "hostName": "[parameters('customers')[copyIndex('frontDoorFrontendsApp2')].app2HostName]",
            "sessionAffinityEnabledState": "Disabled",
            "sessionAffinityTtlSeconds": 0
          }
        }
      },
      {
        "name": "frontDoorRoutingRulesApp1Frontends",
        "count": "[length(parameters('customers'))]",
        "input": {
          "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('frontDoorName'), format('frontend-app1-{0}', parameters('customers')[copyIndex('frontDoorRoutingRulesApp1Frontends')].customerId))]"
        }
      },
      {
        "name": "frontDoorRoutingRulesApp2Frontends",
        "count": "[length(parameters('customers'))]",
        "input": {
          "id": "[resourceId('Microsoft.Network/frontDoors/frontendEndpoints', parameters('frontDoorName'), format('frontend-app2-{0}', parameters('customers')[copyIndex('frontDoorRoutingRulesApp2Frontends')].customerId))]"
        }
      }
    ],
    "frontDoorBackendPoolApp1Name": "backend-pool-app-1",
    "frontDoorBackendPoolApp2Name": "backend-pool-app-2",
    "frontDoorFrontendDefaultName": "frontend-default",
    "frontDoorFrontendDefault": {
      "name": "[variables('frontDoorFrontendDefaultName')]",
      "properties": {
        "hostName": "[format('{0}.azurefd.net', parameters('frontDoorName'))]",
        "sessionAffinityEnabledState": "Disabled",
        "sessionAffinityTtlSeconds": 0
      }
    },
    "frontDoorFrontendAppNames": "[concat(variables('frontDoorFrontendNamesApp1'), variables('frontDoorFrontendNamesApp2'))]",
    "frontDoorFrontends": "[concat(array(variables('frontDoorFrontendDefault')), variables('frontDoorFrontendsApp1'), variables('frontDoorFrontendsApp2'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/frontDoors",
      "apiVersion": "2019-04-01",
      "name": "[parameters('frontDoorName')]",
      "location": "global",
      "properties": {
        "frontendEndpoints": "[variables('frontDoorFrontends')]",
        "healthProbeSettings": [
          {
            "name": "health-probe-app-1",
            "properties": {
              "path": "/",
              "protocol": "Http",
              "intervalInSeconds": 120
            }
          },
          {
            "name": "health-probe-app-2",
            "properties": {
              "path": "/",
              "protocol": "Http",
              "intervalInSeconds": 120
            }
          }
        ],
        "loadBalancingSettings": [
          {
            "name": "shared-load-balancing-settings",
            "properties": {
              "sampleSize": 4,
              "successfulSamplesRequired": 2
            }
          }
        ],
        "backendPools": [
          {
            "name": "[variables('frontDoorBackendPoolApp1Name')]",
            "properties": {
              "backends": [
                {
                  "address": "[parameters('app1BackendUrl')]",
                  "httpPort": 80,
                  "httpsPort": 443,
                  "weight": 50,
                  "priority": 1,
                  "enabledState": "Enabled"
                }
              ],
              "loadBalancingSettings": {
                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('frontDoorName'), 'shared-load-balancing-settings')]"
              },
              "healthProbeSettings": {
                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('frontDoorName'), 'health-probe-app-1')]"
              }
            }
          },
          {
            "name": "[variables('frontDoorBackendPoolApp2Name')]",
            "properties": {
              "backends": [
                {
                  "address": "[parameters('app2BackendUrl')]",
                  "httpPort": 80,
                  "httpsPort": 443,
                  "weight": 50,
                  "priority": 1,
                  "enabledState": "Enabled"
                }
              ],
              "loadBalancingSettings": {
                "id": "[resourceId('Microsoft.Network/frontDoors/loadBalancingSettings', parameters('frontDoorName'), 'shared-load-balancing-settings')]"
              },
              "healthProbeSettings": {
                "id": "[resourceId('Microsoft.Network/frontDoors/healthProbeSettings', parameters('frontDoorName'), 'health-probe-app-2')]"
              }
            }
          }
        ],
        "routingRules": [
          {
            "name": "routingrule-app1",
            "properties": {
              "frontendEndpoints": "[variables('frontDoorRoutingRulesApp1Frontends')]",
              "acceptedProtocols": [
                "Http",
                "Https"
              ],
              "patternsToMatch": [
                "/*"
              ],
              "routeConfiguration": {
                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                "forwardingProtocol": "HttpsOnly",
                "backendPool": {
                  "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('frontDoorName'), variables('frontDoorBackendPoolApp1Name'))]"
                }
              },
              "enabledState": "Enabled"
            }
          },
          {
            "name": "routingrule-app2",
            "properties": {
              "frontendEndpoints": "[variables('frontDoorRoutingRulesApp2Frontends')]",
              "acceptedProtocols": [
                "Http",
                "Https"
              ],
              "patternsToMatch": [
                "/*"
              ],
              "routeConfiguration": {
                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
                "forwardingProtocol": "HttpsOnly",
                "backendPool": {
                  "id": "[resourceId('Microsoft.Network/frontDoors/backendPools', parameters('frontDoorName'), variables('frontDoorBackendPoolApp2Name'))]"
                }
              },
              "enabledState": "Enabled"
            }
          }
        ]
      }
    },
    {
      "copy": {
        "name": "customHttpsConfiguration",
        "count": "[length(variables('frontDoorFrontendAppNames'))]"
      },
      "type": "Microsoft.Network/frontDoors/frontendEndpoints/customHttpsConfiguration",
      "apiVersion": "2020-07-01",
      "name": "[format('{0}/{1}/default', parameters('frontDoorName'), variables('frontDoorFrontendAppNames')[copyIndex()])]",
      "properties": {
        "protocolType": "ServerNameIndication",
        "certificateSource": "FrontDoor",
        "frontDoorCertificateSourceParameters": {
          "certificateType": "Dedicated"
        },
        "minimumTlsVersion": "1.2"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/frontDoors', parameters('frontDoorName'))]"
      ]
    }
  ]
}